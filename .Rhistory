reticulate::repl_python()
import pandas as pd
import numpy as np
import statsmodels.api as sm
import statsmodels.formula.api as smf
from linearmodels.panel import PanelOLS
from statsmodels.stats.diagnostic import het_breuschpagan
from linearmodels.panel import compare
import patsy
# Load the data
df = pd.read_excel(".\\Data\\Crime_NorthCarolina.xlsx")
# Preview
print(df.head(3))
pip install pandas
pip
import pandas as pd
import numpy as np
import statsmodels.api as sm
import statsmodels.formula.api as smf
from linearmodels.panel import PanelOLS
from statsmodels.stats.diagnostic import het_breuschpagan
from linearmodels.panel import compare
import patsy
# Load the data
df = pd.read_excel(".\\Data\\Crime_NorthCarolina.xlsx")
# Preview
print(df.head(3))
quit
library(reticulate)
use_python("C:\\Program Files\\Python38\\python.exe", required = TRUE)
library(reticulate)
py_config()
use_python("C:/Program Files/Python38/python.exe", required = FALSE)
library(reticulate)
use_python("C:/Program Files/Python38/python.exe", required = TRUE)
library(reticulate)
use_python("C:/Program Files/Python38/python.exe", required = TRUE)
source("~/.active-rstudio-document", echo=TRUE)
library(reticulate)
use_python("C:/Program Files/Python38/python.exe", required = TRUE)
library(reticulate)
use_python("C:/Program Files/Python38/python.exe", required = TRUE)
py_config()
reticulate::repl_python()
import pandas as pd
import numpy as np
import statsmodels.api as sm
import statsmodels.formula.api as smf
from linearmodels.panel import PanelOLS
from statsmodels.stats.diagnostic import het_breuschpagan
from linearmodels.panel import compare
import patsy
# Load the data
df = pd.read_excel(".\\Data\\Crime_NorthCarolina.xlsx")
# Preview
print(df.head(3))
quit
library(lmtest)
library(readxl)
library(estimatr)
library(plm)
df <- read_excel(".\\Data\\Crime_NorthCarolina.xlsx")
head(df,n=3)
model <- lm_robust(log(crmrte) ~ log(prbarr) + log(prbconv) + prbpris, data = df)
summary(model)
# fixed effect model and random effect model using plm
library(plm)
fixed = plm(log(crmrte) ~ log(prbarr) + log(prbconv) + prbpris, data=df, index=c("county", "year"), model="within")
random = plm(log(crmrte) ~ log(prbarr) + log(prbconv) + prbpris, data=df, index=c("county", "year"), model="random")
# fixed effect model summary
summary(fixed)
